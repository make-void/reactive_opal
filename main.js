/* Generated by Opal 0.7.2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var $a, $b, TMP_4, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $gvars = Opal.gvars;
  if ($gvars.document == null) $gvars.document = nil;

  Opal.add_stubs(['$all=', '$append_to', '$line', '$[]', '$lambda', '$+', '$all', '$add_element', '$on', '$to_proc', '$handle_click', '$DOM', '$info', '$red', '$span', '$div', '$ready', '$apply_view_event_bindings']);
  self.$require("browser");
  self.$require("browser/http");
  (function($base, $super) {
    function $State(){};
    var self = $State = $klass($base, $super, 'State', $State);

    var def = self.$$proto, $scope = self.$$scope;

    (Opal.cvars['@@state'] = $hash2([], {}));

    Opal.defs(self, '$all', function() {
      var $a, self = this;

      return (($a = Opal.cvars['@@state']) == null ? nil : $a);
    });

    return (Opal.defs(self, '$all=', function(state) {
      var self = this;

      return (Opal.cvars['@@state'] = state);
    }), nil) && 'all=';
  })(self, null);
  (($a = [$hash2(["line"], {"line": 1})]), $b = $scope.get('State'), $b['$all='].apply($b, $a), $a[$a.length-1]);
  Opal.Object.$$proto.$add_element = function() {
    var self = this;
    if ($gvars.document == null) $gvars.document = nil;

    return self.$line().$append_to($gvars.document['$[]']("container"));
  };
  (function($base, $super) {
    function $Actions(){};
    var self = $Actions = $klass($base, $super, 'Actions', $Actions);

    var def = self.$$proto, $scope = self.$$scope;

    return (Opal.defs(self, '$handle_click', function() {
      var $a, $b, TMP_1, self = this;

      return ($a = ($b = self).$lambda, $a.$$p = (TMP_1 = function(){var self = TMP_1.$$s || this, $a, $b;

      (($a = [$hash2(["line"], {"line": $scope.get('State').$all()['$[]']("line")['$+'](1)})]), $b = $scope.get('State'), $b['$all='].apply($b, $a), $a[$a.length-1]);
        return self.$add_element();}, TMP_1.$$s = self, TMP_1), $a).call($b);
    }), nil) && 'handle_click'
  })(self, null);
  Opal.Object.$$proto.$apply_view_event_bindings = function(app_container) {
    var $a, $b, self = this;

    return ($a = ($b = app_container).$on, $a.$$p = $scope.get('Actions').$handle_click().$to_proc(), $a).call($b, "click");
  };
  Opal.Object.$$proto.$line = function() {
    var $a, $b, TMP_2, self = this;

    return ($a = ($b = self).$DOM, $a.$$p = (TMP_2 = function(){var self = TMP_2.$$s || this, $a, $b, TMP_3;

    return ($a = ($b = self.$div()).$info, $a.$$p = (TMP_3 = function(){var self = TMP_3.$$s || this;

      return self.$span().$red("added line: " + ($scope.get('State').$all()['$[]']("line")))}, TMP_3.$$s = self, TMP_3), $a).call($b)}, TMP_2.$$s = self, TMP_2), $a).call($b);
  };
  return ($a = ($b = $gvars.document).$ready, $a.$$p = (TMP_4 = function(){var self = TMP_4.$$s || this, app_container = nil;
    if ($gvars.document == null) $gvars.document = nil;

  app_container = $gvars.document['$[]']("container");
    self.$line().$append_to(app_container);
    return self.$apply_view_event_bindings(app_container);}, TMP_4.$$s = self, TMP_4), $a).call($b);
})(Opal);
